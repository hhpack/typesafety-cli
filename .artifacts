#!/usr/bin/env bash

# Create a artifacts directory
mkdir dist
DIST_DIR="${PWD}/dist"

UNAME=$(uname)
MACHINE_ARCH=$(uname -m)

# ------------------------------------------
# Create a debian package
# ------------------------------------------
create_debian_artifacts() {
  echo "Create a debian package"
  if [ "${MACHINE_ARCH}" = "x86_64" ] ; then
    PLATFORM="linux_amd64"
  elif [ "${MACHINE_ARCH}" = "i686" ] ; then
    PLATFORM="linux_386"
  else
    return
  fi

  mkdir -p package/deb/usr/bin
  cp _build/src/typesafety.native package/deb/usr/bin/typesafety
  fakeroot dpkg-deb --build ./package/deb .

  cp *.deb $DIST_DIR

  platform_archive $PLATFORM
}

create_macos_artifacts() {
  echo "Create a macos package"
  if [ "${MACHINE_ARCH}" = "x86_64" ] ; then
    PLATFORM="darwin_amd64"
  return
  fi
  platform_archive $PLATFORM
}

platform_archive() {
  # FIXME: Remove after checking
  if [ "${TRAVIS_TAG}" = "" ] ; then
    TRAVIS_TAG="0.4.0"
  fi
  PLATFORM=$1
  ZIP_NAME=${PRODUCT}_${TRAVIS_TAG}_${PLATFORM}.zip
  ZIP_DIRECTORY=/tmp/$PRODUCT
  ZIP_TARGET_DIRECTORY=$ZIP_DIRECTORY/${PRODUCT}_${PLATFORM}

  mkdir -p $ZIP_TARGET_DIRECTORY
  cp _build/src/typesafety.native $ZIP_TARGET_DIRECTORY/$PRODUCT

  cd $ZIP_DIRECTORY
  zip -rD $ZIP_NAME ${PRODUCT}_${PLATFORM}
  cp $ZIP_NAME $DIST_DIR
}

case $TRAVIS_OS_NAME in
  osx) create_macos_artifacts ;;
  linux) create_debian_artifacts ;;
esac

ls -l $DIST_DIR
